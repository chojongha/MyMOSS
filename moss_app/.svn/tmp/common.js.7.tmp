/**
 * common.js
 */
var commonDebugPrefix = "[common.js] : ";
var deviceInfo = "";
var userID = "";
var db = 0;
var currentLat = "";
var currentLng = "";
var serCode=new Array();
var serName=new Array();
var watchID = null;

//var url = "http://192.168.25.7:8080/moss/";
//var url = "http://192.168.25.18:8080/moss/";
var url = "http://10.217.76.186:8081/moss/";
//var url = "http://moss.kt.com/moss/";


function showCommonAlert(title, message) {
	function alertDismissed() {
		console.log(commonDebugPrefix + "============== Alert paramter==============");
		console.log(commonDebugPrefix + "title : " + title);
		console.log(commonDebugPrefix + "message : " + message);
    }
    navigator.notification.alert(
    	message,  		// message
        alertDismissed, // callback
        title,          // title
        '확인'          // buttonName
    );
}

function onCurrentPosSuccess(position) {
    currentLat = position.coords.latitude;
    currentLng = position.coords.longitude;
    
    console.log(commonDebugPrefix + "============== get Current Location ==============");
    console.log(commonDebugPrefix + "currentLat : " + currentLat);
    console.log(commonDebugPrefix + "currentLng : " + currentLng);
    
    if($.mobile.activePage.is('#page_alarmList_detail_map')){
    	if(deviceInfo == "Android") {
    		callDaumIntent("daummaps://route?sp=" + currentLat + "," + currentLng + "&ep=" + geocodeLat + "," + geocodeLng + "&by=car");
    	} else {
    		window.location.href = "daummaps://route?sp=" + currentLat + "," + currentLng + "&ep=" + geocodeLat + "," + geocodeLng + "&by=car";
    	}
    }
}

function onCurrentPosError(error) {
    console.log(commonDebugPrefix + 'code: '    + error.code    + '\n' + 'message: ' + error.message + '\n');
    
    if(error.code == 2) {
    	var message = "";
    	if(deviceType = "Android") {
    		message = "위치서비스가 비활성화 되어있습니다.\n정상적인 사용을 위해\n환경설정 -> 더보기 -> 위치서비스로 이동하여 [무선 네트워크 사용]을\n활성화하시기 바랍니다.";
    	} else {
    		message = "위치서비스가 비활성화 되어있습니다.\n정상적인 사용을 위해\n설정 -> 개인 정보 보호 -> 위치 서비스로 이동하여\nMOSS의 위치서비스를 활성화하시기 바랍니다.";
    	}
    	showCommonAlert("위치정보 수집 실패", message);
    }
}

function getUserID() {
	return userID;
}

function callDaumIntent(url) {
	CDV.WEBINTENT.startActivity({
	    action: CDV.WEBINTENT.ACTION_VIEW,
	    url: url}, 
	    function() {}, 
	    function() {
	    	alert('Failed to open URL via Android Intent');
	    }
	);
}

function callIntent() {
	CDV.WEBINTENT.startActivity({
	    action: CDV.WEBINTENT.ACTION_VIEW,
//	    url: 'geo:0,0?q='}, 
	    url: 'qtest://moss'}, 
	    function() {}, 
	    function() {
	    	alert('Failed to open URL via Android Intent');
	    }
	);
}

function callDownloadPage() {
	CDV.WEBINTENT.startActivity({
	    action: CDV.WEBINTENT.ACTION_VIEW,
	    url: 'http://moss.kt.com/moss/index'}, 
	    function() {}, 
	    function() {
	    	alert('Failed to open URL via Android Intent');
	    }
	);
}

function onPause() {
	if(interval_detail != null) {
		clearInterval(interval_detail); // stop the interval
		console.log(commonDebugPrefix + "========= on Pause ========= \n고장상황(진행) 상세 페이지 폴링 중지, Polling Number => " + interval_detail);
	}
}

function onResume() {
	if(interval_detail != null && $.mobile.activePage.is('#page_alarmList_detail')) {
		interval_detail = setInterval(function(){
			faultNotiPolling();
		}, 10*1000);
		console.log(commonDebugPrefix + "========= on Resume ========= \n고장상황(진행) 상세 페이지 폴링 시작, Polling Number => " + interval_detail);
	}
}

var onDeviceReady = function() {
	pictureSource = navigator.camera.PictureSourceType; 	// api-camera Photo URI
	destinationType = navigator.camera.DestinationType;
	deviceInfo = device.platform;							// device Info load
	document.addEventListener("pause", onPause, false);		// device pause, resume events
	document.addEventListener("resume", onResume, false);
	
	navigator.geolocation.getCurrentPosition(onCurrentPosSuccess, onCurrentPosError);	// 어플 구동 시 현재 위치 정보 수집
	
	// 안드로이드 backButton 예외처리
	if(deviceInfo == "Android") {
		document.addEventListener("backbutton", function(e){
		    if($.mobile.activePage.is('#page_index')){
		        e.preventDefault();
		        showConfirm();
		    }
		    else {
		        navigator.app.backHistory();
		    }
		}, false);
	}
	
    if($.mobile.activePage.is('#page_login')){
    	window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);	// file api
    }
};
// api load
function init() {
	document.addEventListener("deviceready", onDeviceReady, true);
}

//api-connection
function check_network() {
    var networkState = navigator.network.connection.type;

    var states = {};
    states[Connection.UNKNOWN]  = false;	//'Unknown connection';
    states[Connection.ETHERNET] = true;		//'Ethernet connection';
    states[Connection.WIFI]     = true;		//'WiFi connection';
    states[Connection.CELL_2G]  = true;		//'Cell 2G connection';
    states[Connection.CELL_3G]  = true;		//'Cell 3G connection';
    states[Connection.CELL_4G]  = true;		//'Cell 4G connection';
    states[Connection.NONE]     = false;	//'No network connection';
    
    return states[networkState];
}

function getDeviceInfo() {
	return deviceInfo.toLowerCase();
}

var showConfirm = function() {
	function onConfirm(button) {
//		alert('You selected button ' + button);
		if (button == 2) {
			navigator.app.exitApp();
		}
	}
	navigator.notification.confirm(
		'종료할꺼?!', // message
		onConfirm, // callback to invoke with index of button pressed
		'종료', // title
		'취소,확인' // buttonLabels
	);
};

var commonShowConfirm = function() {
	function onConfirm(button) {
		alert('You selected button ' + button);
	}
	navigator.notification.confirm(
		'종료할꺼?!', // message
		onConfirm, // callback to invoke with index of button pressed
		'종료', // title
		'확인'
	);
};

//조회
function getUserIDResult() {
	db.transaction(querySelectUserID, errorGetUserID);
}
function querySelectUserID(tx) {
	tx.executeSql('SELECT userID FROM MOSS_USERINFO', [], selectUserIDSuccess, errorGetUserID);
}
function selectUserIDSuccess(tx, results) {
	userID = results.rows.item(0).userID;
	console.log(commonDebugPrefix + "=============== DB userID =============== : " + userID);
}
function errorGetUserID(err) {
	console.log(commonDebugPrefix + "db error");
}

$(document).ready(function() {
//	alert(commonDebugPrefix + "load");

	// 로그인이 완료되면 로컬DB 에서 사번을 읽어온다.
	if (!db) {
		db = window.openDatabase("Database", "1.0", "myDb", 200000);
	}
	getUserIDResult();
});

//서비스분야배열생성
function serviceCode_CodeName(){
		
	$.ajax({
		url: url+"ServiceList",
		type: "post",
		timeout: 10*1000,
		dataType: "json",
		success:function(result){
			var bodyData=result.body;
			var headerData=result.header;
			
			if(headerData.result != 0){
				console.log(commonDebugPrefix + "분야데이터없음");
			}else{
				$.each(bodyData, function(key,val){						
					serCode[key]=val.CD;
					serName[key]=val.CD_NM;									
				});	
				for(var i=0; i<serCode.length; i++){
					console.log(manualList_debugPrefix + "서비스분야코드 : " + serCode[i]);
					console.log(manualList_debugPrefix + "서비스분야이름 : " + serName[i]);
				}
			}
		},
		error : function(){
			console.log(commonDebugPrefix + "서비스코드배열 생성 에러");
		}
	});
}