package com.kt.moss;

import java.io.File;

import org.apache.cordova.DroidGap;

import android.app.DownloadManager;
import android.app.DownloadManager.Request;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.webkit.DownloadListener;

public class MainActivity extends DroidGap {
	
	private DownloadManager downloadManager; 
	private static Intent intent;
	private static File file;
	private static final String DOWNLOAD_PATH = "/sdcard/Download/";
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		// MainActivity 에서 받아온 디바이스 아이디 값을 받아온다.
		Intent intent_main = getIntent(); 
        String regId = intent_main.getStringExtra("regId");   
        // 디바이스 아이디를 웹뷰의 GetParameter로 전달한다.
		super.loadUrl("file:///android_asset/www/client/login.html?getRegId="+ regId +"");
		
		downloadManager = (DownloadManager)getSystemService(Context.DOWNLOAD_SERVICE); 
		//Enable zoom in WebView
//		WebSettings ws = super.appView.getSettings();
//	    ws.setSupportZoom(true);
//	    ws.setBuiltInZoomControls(true);
		
		// 웹뷰 파일 다운로드 시 파일다운로더와 인텐트를 이용한 파일 처리
		super.appView.setDownloadListener(new DownloadListener() {
		    
		    @Override
		    public void onDownloadStart(String url, String userAgent, String contentDisposition, String mimeType, long contentLength) {
		     
				Log.d("MAIL", "===============onDownloadStart()================================");
				Log.d("MAIL", "url : " + url);
				Log.d("MAIL", "userAgent : " + userAgent);
				Log.d("MAIL", "contentDisposition : " + contentDisposition);
				Log.d("MAIL", "mimeType : " + mimeType);
				Log.d("MAIL", "contentLength : " + contentLength);
				 
				Uri uri = Uri.parse(url);
				String fileName = contentDisposition.substring(contentDisposition.lastIndexOf("=") + 1, contentDisposition.length());

//				try {
//					fileName = URLDecoder.decode(fileName, "UTF-8");
//				} catch (UnsupportedEncodingException e) {
//					e.printStackTrace();
//				}
								
				Request downloadRequest = new DownloadManager.Request(uri);
				downloadRequest = new DownloadManager.Request(uri);
				downloadRequest.setMimeType(mimeType);
				downloadRequest.setTitle("Downloader");
				downloadRequest.setDescription("Downloding...");
				downloadRequest.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, fileName);
				downloadRequest.addRequestHeader("Connection", "close");
				Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).mkdirs();
				
				downloadManager.enqueue(downloadRequest);
				file = new File(DOWNLOAD_PATH + fileName);
				
				String fileExtend = getExtension(file.getAbsolutePath());
				
				intent = new Intent();
				getMimeType(fileExtend);
				startActivity(intent);
		    }
		});
	}
	
	// 확장자 추출
	public static String getExtension(String fileStr) {
		return fileStr.substring(fileStr.lastIndexOf(".") + 1, fileStr.length());
	}
	// 파일형식에 따른 mineType 설정
	public static String getMimeType(String fileExtend) {
		// 파일 확장자 별로 mime type 지정해 준다.
		if (fileExtend.equalsIgnoreCase("jpg") || fileExtend.equalsIgnoreCase("jpeg") 
			|| fileExtend.equalsIgnoreCase("gif") || fileExtend.equalsIgnoreCase("png") 
			|| fileExtend.equalsIgnoreCase("bmp")) {
			intent.setDataAndType(Uri.fromFile(file), "image/*");
		} 
		else if (fileExtend.equalsIgnoreCase("txt")) {
			intent.setDataAndType(Uri.fromFile(file), "text/*");
		} 
		else if (fileExtend.equalsIgnoreCase("doc") || fileExtend.equalsIgnoreCase("docx")) {
			intent.setDataAndType(Uri.fromFile(file), "application/msword");
		} 
		else if (fileExtend.equalsIgnoreCase("xls") || fileExtend.equalsIgnoreCase("xlsx")) {
			intent.setDataAndType(Uri.fromFile(file), "application/vnd.ms-excel");
		} 
		else if (fileExtend.equalsIgnoreCase("ppt") || fileExtend.equalsIgnoreCase("pptx")) {
			intent.setDataAndType(Uri.fromFile(file), "application/vnd.ms-powerpoint");
		} 
		else if (fileExtend.equalsIgnoreCase("pdf")) {
			intent.setDataAndType(Uri.fromFile(file), "application/pdf");
		} 
		else if (fileExtend.equalsIgnoreCase("hwp")) {
			intent.setDataAndType(Uri.fromFile(file), "application/haansofthwp");
		}				
		return fileExtend;
	}
}
