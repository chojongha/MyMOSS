/**
 *		alarmList_noti_detail.js
 */

var alarmList_noti_detail_debugPrefix = "[alarmList_noti_detail.js] : ";

var pictureSource;   // picture source
var destinationType; // sets the format of returned value 
var imgUrl = "";
var notiseqnum = "";
var setOfficeName = "";
var interval_detail = null;	// 상세 페이지 폴링용 변수
var commentSeqArray = new Array();
var pollingDate_detail = null;
var pollingCD_detail = "";
var pollingCM_detail = "";
var myScroll;
var faultLocation = "";	// 고장국사 상세 주소 (맵 표시용 변수)
var geocodeLat = "";
var geocodetLng = "";
var daum_map = null;

function take_pic() {
    navigator.camera.getPicture(onPhotoURISuccess, function(ex) {
        alert("Camera Error!");
    }, { quality : 100, 
    	targetWidth: 300,
    	correctOrientation: true,
    	destinationType: destinationType.FILE_URI });
}

function album_pic() { 
    navigator.camera.getPicture(onPhotoURISuccess, function(ex) {
            alert("Camera Error!"); }, 
            { quality: 30, 
            targetWidth: 300,
            correctOrientation: true,
	        destinationType: destinationType.FILE_URI,
	        sourceType: pictureSource.SAVEDPHOTOALBUM });
}

function captureError(error) {
    var msg = 'An error occurred during capture: ' + error.code;
    navigator.notification.alert(msg, null, 'Error!');
}
function formatError(error) {
    alert("Error getting file format data: " + error.code); 
}

function onPhotoURISuccess(imageURI) {
  var smallImage = document.getElementById('smallImage');
  smallImage.style.display = 'block';
  smallImage.src = imageURI;
  console.log(alarmList_noti_detail_debugPrefix + $("#smallImage").attr("src"));
  console.log(alarmList_noti_detail_debugPrefix + "img data load end");
  
  imgUrl = imageURI;
  console.log(alarmList_noti_detail_debugPrefix + "imgURL = " + imgUrl);
}

function getPositionSuccess(position) {
	console.log(alarmList_noti_detail_debugPrefix + "getPositionSuccess() call");
	
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    
    console.log(alarmList_noti_detail_debugPrefix + "latitude = " + latitude);
    console.log(alarmList_noti_detail_debugPrefix + "longitude = " + longitude);
    
    setLocationInfo(latitude, longitude);
}

function getCurrentPosition(position) {
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    
    console.log(alarmList_noti_detail_debugPrefix + "latitude = " + latitude);
    console.log(alarmList_noti_detail_debugPrefix + "longitude = " + longitude);
    
    return " 'position': '" + latitude + "," + longitude + "' ";
}

function getPositionError(error) {
    console.log(alarmList_noti_detail_debugPrefix + 'code: ' + error.code + '\n' + 'message: ' + error.message + '\n');
}

//현재 위치 전송 기능
var setLocation = function() {
	function onConfirm(button) {
		if(button == "2") {
			navigator.geolocation.watchPosition(getPositionSuccess, getPositionError);
			console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송");
		} else {
			console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 취소");
		}	
	}
	navigator.notification.confirm(
		'현재 위치를 서버로 전송하시겠습니까?', // message
		onConfirm, // callback to invoke with index of button pressed
		'현재 위치 전송', // title
		'취소,확인'
	);
};

function getAlarmDetailPage() {
	$.mobile.loading( "show", {
		  text: "로딩중...",
		  textVisible: true,
		  theme: "a",
		  html: ""
	});
	
	notiseqnum = Request("notiseqnum");

	console.log(alarmList_noti_detail_debugPrefix + " request notiseqnum = " + notiseqnum);
	
	$.ajax({
		url: url + "FaultNotiDetailInfo",
		type: "post",
		timeout: 10 * 1000,
		dataType: "json",
		data: {notiseqnum:notiseqnum},
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val){
				console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 출력 ============");
				
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
				});
				
				//	본문 테이블 생성
				var tableText = "<table id='table_detail'>" +
								"<tr>" +
								"<td class='table_td_subject'>제목</td>" +
								"<td class='table_td' colspan='3' id='detail_subject'>" +"</td>" +
								"</tr>" +
								"<tr>" +
								"<td class='table_td_subject'>일시</td>" +
								"<td class='table_td' id='detail_writeDate'>" +"</td>" +
								"<td class='table_td_subject'>담당자</td>" +
								"<td class='table_td' id='detail_writerName'>" +"</td>" +
								"</tr>" +
								"<tr>" +
								"<td class='table_td_subject'>분야</td>" +
								"<td class='table_td' colspan='3' id='detail_services'>" +"</td>" +
								"</tr>" +
								"<tr>" +
								"<td class='table_td_subject'>상세<br>주소</td>" +
								"<td class='table_td' colspan='3' id='detail_addr'></td>" +
								"</tr>" +
								"<tr>" +
								"<td class='table_td_subject'>VOC</td>" +
								"<td class='table_td' id='detail_vocCnt'>" +"</td>" +
								"<td class='table_td_subject'>국사</td>" +
								"<td class='table_td' id='detail_officeName'></td>" +
								"</tr>" +
								"<tr>" +
								"<td class='table_td' colspan='4' id='detail_content'></td>" +
								"</tr>" +
								"</table>";
				//	본문 테이블 append
				$("#table_faultDetail").html(tableText);
				//	본문 데이터 셋팅
				$("#detail_subject").text(val.SUBJECT);
				$("#detail_writeDate").text(val.WRITEDATE);
				$("#detail_writerName").text(val.WRITERNAME);
				$("#detail_services").text(val.SERVICES);
				$("#detail_addr").text("대전광역시 유성구 전민동 463-1");
				faultLocation = "대전광역시 유성구 전민동 463-1";
				if(val.TT_YN == "Y") {
					$("#detail_vocCnt").text("총발생 : " + val.TOTAL_VOC_CNT);
				} else {
					$("#detail_vocCnt").text("없음");
				}
				$("#detail_officeName").text(val.OFFICENAMES);
				$("#detail_content").text(val.CONTENT);
				
				if(pollingDate_detail == null) {
					pollingDate_detail = val.WRITEDATE;		// 파라미터용으로 따로 저장
				}
				setOfficeName = val.OFFICENAMES;			// office name을 전송 파라미터용도로 따로 저장
				
				// 고장 상황 상세 댓글
				var commentData = result.comment;
				var liText = "";
				var userType = "";
				
				$.each(commentData, function(key, val){
					console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 댓글 출력 ============ CommentSeqNum => " + val.COMMENTSEQNUM);
					
					$.each(val, function(key, val) {
						console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
					});
					
					commentSeqArray.push(parseInt(val.COMMENTSEQNUM));	// commentSeqNum을 배열에 저장

					if(val.USERTYPE == "1") {
						userType = "[현장]";
					} else {
						userType = "[센터]";
					}
					
					if(val.FILEBINARY == null) {
						liText += 	"<li>" +
										"<a href='#'>" +
					        			"<p><b>" + val.WRITEDATE + " (" + val.WRITERNAME + ")</b></p>" +
					        			"<p>" + userType + " " + val.CONTENT + "</p></a>" +
					        			"<a href='tel:" + val.MOBILE_PHONE_NUM + "'></a>" +
				        			"</li>";
					} else {
						liText += 	"<li>" +
										"<a href='#'>" +
					        			"<p><b>" + val.WRITEDATE + " (" + val.WRITERNAME + ")</b></p>" +
					        			"<p>" + userType + " " + val.CONTENT + "</p></a>" +
					        			"<p align='center'><img src='data:image/jpeg;base64," + val.FILEBINARY + "' width='250px'></p>" +
					        			"<a href='tel:" + val.MOBILE_PHONE_NUM + "'></a>" +
				        			"</li>";
					}
				});
				$("#Detail_commentList").empty();
				$("#Detail_commentList").append(liText).listview("refresh");
				// 화면에 리스트 출력이 완료되면 loader를 종료
				$.mobile.hidePageLoadingMsg();
		    });
			console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 출력 완료 ============");
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
//	        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 출력 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 출력 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 출력 에러 : " + errorThrown);
	    }
	});
}

//	현재 위치 전송
function setLocationInfo(latitude, longitude) {
	
	$.mobile.loading( "show", {
		  text: "현재 위치 전송 중...",
		  textVisible: true,
		  theme: "a",
		  html: ""
	});
	
	var setWorkerId = loginId;
	var setLatLng = latitude + "," + longitude;
	var setReverseGeocoding = "";
	
	$.ajax({
	    url: "http://maps.googleapis.com/maps/api/geocode/json",
	    timeout: 10 * 1000,
	    type: 'get',
	    dataType: "json",
	    data:{latlng:setLatLng, sensor:true},
	    cache: false,
	    success: function(result){
	    	var resultData = result.results;
	    	console.log(alarmList_noti_detail_debugPrefix + "============ Reverse Geocoding 완료 ============");
	    	$.each(resultData, function(key, val){
	    		if(key == "0") {
	    			setReverseGeocoding = val.formatted_address;
	    			console.log(alarmList_noti_detail_debugPrefix + "setReverseGeocoding = " + setReverseGeocoding);
	    		}
		    	$.each(val, function(key, val){
		    		console.log(alarmList_noti_detail_debugPrefix + key + "," + val);
		    	});
	    	});
	    }
	}).done (function() {
		$.ajax({
			url: url + "CurLocRegist",
			type: "post",
			timeout: 10 * 1000,
			dataType: "json",
			data: {workerid:setWorkerId, latitude:latitude, longitude:longitude, address:setReverseGeocoding},
			success: function (result) {
				var bodyData = result.body;
				console.log(alarmList_noti_detail_debugPrefix + "============ 현재 위치 전송 ============");
				console.log(alarmList_noti_detail_debugPrefix + "workerid = " + setWorkerId);
				console.log(alarmList_noti_detail_debugPrefix + "latitude = " + latitude);
				console.log(alarmList_noti_detail_debugPrefix + "longitude = " + longitude);
				console.log(alarmList_noti_detail_debugPrefix + "address = " + setReverseGeocoding);
				
				$.each(bodyData, function(key, val){
					if(val.result == "0") {
						console.log(alarmList_noti_detail_debugPrefix + "============ 현재 위치 전송 완료 ============");
					} else {
						console.log(alarmList_noti_detail_debugPrefix + "============ 현재 위치 전송 실패 ============");
						console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
						alert(val.errMsg);
					}
					$.each(val, function(key, val) {
						console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
					});
			    });
				// 화면에 리스트 출력이 완료되면 loader를 종료
				$.mobile.hidePageLoadingMsg();
			},
			error: function(jqXHR, textStatus, errorThrown) {
				$.mobile.hidePageLoadingMsg();
//		        alert(textStatus); // this will be "timeout"
		        console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 에러 : " + jqXHR.status);
		        console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 에러 : " + jqXHR.responseText);
				console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 에러 : " + errorThrown);
		    }
		});
	});
}

//	상황 보고
function setReport() {
	$.mobile.loading( "show", {
		  text: "상황 보고...",
		  textVisible: true,
		  theme: "a",
		  html: ""
	});
	
	console.log(alarmList_noti_detail_debugPrefix + "============ 상황 보고 Parameter ============");
	
	var workerid = loginId;
	var userstate = $(":input:radio[name=detail_report]:checked").val();
	var destination = setOfficeName;
	var writenrname = userName;
	var usertype = "1";	//	현장 작업자 코드 1 고정;
	
	console.log(alarmList_noti_detail_debugPrefix + "workerid = " + workerid);
	console.log(alarmList_noti_detail_debugPrefix + "userstate = " + userstate);
	console.log(alarmList_noti_detail_debugPrefix + "destination = " + destination);
	console.log(alarmList_noti_detail_debugPrefix + "notiseqnum = " + notiseqnum);
	console.log(alarmList_noti_detail_debugPrefix + "writenrname = " + writenrname);
	console.log(alarmList_noti_detail_debugPrefix + "usertype = " + usertype);
	
	$.ajax({
		url: url + "FaultNotiReport",
		type: "post",
		timeout: 10 * 1000,
		dataType: "json",
		data: {workerid:workerid, userstate:userstate, destination:destination, notiseqnum:notiseqnum, writername:writenrname, usertype:usertype},
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val){
				if(val.result == "0") {
					console.log(alarmList_noti_detail_debugPrefix + "============ 상황 보고 완료 ============");
					console.log(url);
				} else {
					console.log(alarmList_noti_detail_debugPrefix + "============ 상황 보고 실패 ============");
					console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
					alert(val.errMsg);
				}
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
				});
		    });
			// 화면에 리스트 출력이 완료되면 loader를 종료
			$.mobile.hidePageLoadingMsg();
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
//		        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "상황 보고 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "상황 보고 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "상황 보고 에러 : " + errorThrown);
	    }
	}).done( function() {
		getFaultCommentList();
	});
}

//Request
function Request(valuename) {
	var rtnval = "";
	var nowAddress = unescape(location.href);
	var parameters = (nowAddress.slice(nowAddress.indexOf("?")+1,nowAddress.length)).split("&");

	for(var i = 0 ; i < parameters.length ; i++) {
		var varName = parameters[i].split("=")[0];
		if(varName.toUpperCase() == valuename.toUpperCase())
		{
			rtnval = parameters[i].split("=")[1];
			break;
		}
	}
	return rtnval;
}

function setFormData() {
	
	alert(alarmList_noti_detail_debugPrefix + "setFormData() call");	
	console.log(alarmList_noti_detail_debugPrefix + "notiseqnum = " + notiseqnum);
	console.log(alarmList_noti_detail_debugPrefix + "writerid = " + loginId);
	console.log(alarmList_noti_detail_debugPrefix + "writername = " + userName);
	console.log(alarmList_noti_detail_debugPrefix + "usertype = " + "1");
	console.log(alarmList_noti_detail_debugPrefix + "userstate = " + "0");
	console.log(alarmList_noti_detail_debugPrefix + "content = " + $('#setContent').val());

	$.ajax({
		url: url + "FaultNotiComment",
		type: "post",
		timeout: 10 * 1000,
		data: {notiseqnum:notiseqnum, writerid:loginId, writername:userName, usertype:"1", userstate:"0", content:$('#setContent').val(), file:null},
		cache: false,
		contentType: false,
        processData: false,
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val){
				if(val.result == "0") {
					console.log(alarmList_noti_detail_debugPrefix + "============ 댓글 작성 완료 ============");
					console.log(alarmList_noti_detail_debugPrefix +url);
				} else {
					console.log(alarmList_noti_detail_debugPrefix + "============ 댓글 작성 실패 ============");
					console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
					alert(val.errMsg);
				}
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
				});
		    });
			// 화면에 리스트 출력이 완료되면 loader를 종료
			$.mobile.hidePageLoadingMsg();
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
//		        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "댓글 작성 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "댓글 작성 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "댓글 작성 에러 : " + errorThrown);
	    }
	});
}

// cordova api fileUploader
function fileUpload() {
	
	$.mobile.loading( "show", {
		  text: "댓글 등록 중...",
		  textVisible: true,
		  theme: "a",
		  html: ""
	});
	
	var contents = $("#setContent").val();
    var options = new FileUploadOptions();
    options.fileKey="file";
    options.fileName=imgUrl.substr(imgUrl.lastIndexOf('/')+1);
    options.mimeType="image/jpeg";

    var params = new Object();
    params.notiseqnum = notiseqnum;
    params.writerid = loginId;
    params.writername = userName;
    params.usertype = "1";
    params.userstate = "0";
    params.content = contents;
    options.params = params;
    
    var ft = new FileTransfer();
    ft.upload(imgUrl, encodeURI(url + "FaultNotiComment"), winUpload, failUpload, options);
}

function winUpload(r) {
	$.mobile.hidePageLoadingMsg();
    console.log("Code = " + r.responseCode);
    console.log("Response = " + r.response);
    console.log("Sent = " + r.bytesSent);
}

function failUpload(error) {
	$.mobile.hidePageLoadingMsg();
    alert("An error has occurred: Code = " + error.code);
    console.log("upload error source " + error.source);
    console.log("upload error target " + error.target);
}

function setComment() {
	// 댓글이 입력 되지 않고 전송 버튼을 눌렸을 때 체크
	if($("#setContent").val().length == "") {
		var showConfirm = function() {
			function onConfirm(button) {
				console.log(alarmList_noti_detail_debugPrefix + 'You selected button ' + button);
			}
			navigator.notification.confirm(
				'댓글을 입력하세요', 	// message
				onConfirm, 			// callback to invoke with index of button pressed
				'전송 실패', 			// title
				'확인' 				// buttonLabels
			);
		};
		showConfirm();
	} else {
		$("#notiseqnum").val(notiseqnum);
		$("#writerid").val(loginId);
		$("#writername").val(userName);
		$("#usertype").val("1");
		$("#userstate").val("0");
		$("#form_content").val($("#setContent").val());
		
		console.log(alarmList_noti_detail_debugPrefix + "============= 댓글 입력 파라미터 ==========");
		console.log(alarmList_noti_detail_debugPrefix + "notiseqnum = " + $("#notiseqnum").val());
		console.log(alarmList_noti_detail_debugPrefix + "writerid = " + $("#writerid").val());
		console.log(alarmList_noti_detail_debugPrefix + "writername = " + $("#writername").val());
		console.log(alarmList_noti_detail_debugPrefix + "usertype = " + $("#usertype").val());
		console.log(alarmList_noti_detail_debugPrefix + "userstate = " + $("#userstate").val());
		console.log(alarmList_noti_detail_debugPrefix + "content = " + $("#form_content").val());
		
		 $( "#myForm_onlyComment" ).submit();
	}
}

function showRequest(formData, jqForm, options) {
	$.mobile.loading( "show", {
		  text: "댓글 및 이미지 업로드...",
		  textVisible: true,
		  theme: "a",
		  html: ""
	});
	
    var queryString = $.param(formData); 
//    alert('About to submit: \n\n' + queryString);
    console.log(alarmList_noti_detail_debugPrefix + 'About to submit: \n\n' + queryString);

    return true; 
} 

function showResponse(responseText, statusText, xhr, $form)  { 
//    alert('status: ' + statusText + '\n\nresponseText: \n' + responseText + '\n\nThe output div should have already been updated with the responseText.');
    console.log(alarmList_noti_detail_debugPrefix + 'status: ' + statusText + '\n\nresponseText: \n' + responseText + '\n\nThe output div should have already been updated with the responseText.');
    $.mobile.hidePageLoadingMsg();
	$("#Detail_commentList").empty();
	getAlarmDetailPage();
} 

var options = { 
        beforeSubmit:  showRequest,  	// pre-submit callback 
        success:       showResponse,  	// post-submit callback
        url : url + "FaultNotiComment",
        dataType:  "json",        		// 'xml', 'script', or 'json' (expected server response type)
        clearForm: true,        		// clear all form fields after successful submit 
        resetForm: true,        		// reset the form after successful submit 
        timeout:   10*1000
};

//	상세 페이지 Polling
function faultNotiPolling() {
	console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 폴링 *************** NotiSeqNum = " + notiseqnum);
	console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 폴링 *************** pollingDate_detail = " + pollingDate_detail);
	$.ajax({
		url: url + "FaultNotiPolling",
		type: "post",
		async: false,
		timeout: 10 * 1000,
		data: {notiseqnum:notiseqnum, lastdate:pollingDate_detail},
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val){
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
				});
				pollingDate_detail = val.GREATESTDATE;
				pollingCD_detail = val.CD;
				pollingCM_detail = val.CM;
				console.log(alarmList_noti_detail_debugPrefix + "*************** GREATEST DATE ***************" + pollingDate_detail);
		    });
		},
		error: function(jqXHR, textStatus, errorThrown) {
//		        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 폴링 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 폴링 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 폴링 에러 : " + errorThrown);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 폴링 에러 , 파라미터 : notiseqnum = " + notiseqnum + ", lastdate = " + pollingDate_detail);
	    }
	}).done( function() {
		// 전체 업데이트
		if(pollingCM_detail == "R") {
			console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 Reload ! ***************");
			getAlarmDetailPage();
		} 
		// 댓글 업데이트
		if(pollingCM_detail =="L") {
			console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 Prepend Comment ! ***************");
			getFaultCommentList();
		}
		// 변경 없음
		if(pollingCM_detail == "N") {
			console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 None ! ***************");
		}
		// 본문 업데이트
		if(pollingCD_detail == "C") {
			console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 ChangeData : Change ***************");
			getFaultContent();
		}
		// 변경 없음
		if(pollingCD_detail == "N") {
			console.log(alarmList_noti_detail_debugPrefix + "*************** 고장상황 상세화면 ChangeData : None ***************");
		}
	});
}
//	댓글 리스트 페이징
function getFaultCommentList() {
	var commentSeqNum = getMaxValue();
	
	$.ajax({
		url: url + "FaultPagingCommentList",
		type: "post",
		timeout: 10 * 1000,
		data: {notiseqnum:notiseqnum, commentseqnum:commentSeqNum},
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val) {
				// 고장 상황 상세 댓글
				var liText = "";
				var userType = "";
				var flag = "OK";	// 댓글 유효성 체크용
				
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);	//	로그출력
					// 댓글이 정상적인 값으로 넘어 왔는지 확인 
					if(key == "result") {
						flag = "NOK";
					}
				});
				
				if(flag != "NOK") {
					console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 댓글 Prepend ============ CommentSeqNum : " + val.COMMENTSEQNUM);
					commentSeqArray.push(parseInt(val.COMMENTSEQNUM));	// commentSeqNum을 배열에 저장

					if(val.USERTYPE == "1") {
						userType = "[현장]";
					} else {
						userType = "[센터]";
					}
					
					if(val.FILEBINARY == null) {
						liText += 	"<li>" +
										"<a href='#'>" +
					        			"<p><b>" + val.WRITEDATE + " (" + val.WRITERNAME + ")</b></p>" +
					        			"<p>" + userType + " " + val.CONTENT + "</p></a>" +
					        			"<a href='tel:" + val.MOBILE_PHONE_NUM + "'></a>" +
				        			"</li>";
					} else {
						liText += 	"<li>" +
										"<a href='#'>" +
					        			"<p><b>" + val.WRITEDATE + " (" + val.WRITERNAME + ")</b></p>" +
					        			"<p>" + userType + " " + val.CONTENT + "</p></a>" +
					        			"<p align='center'><img src='data:image/jpeg;base64," + val.FILEBINARY + "' width='250px'></p>" +
					        			"<a href='tel:" + val.MOBILE_PHONE_NUM + "'></a>" +
				        			"</li>";
					}
//						console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 댓글 Prepend ============");
					$("#Detail_commentList").prepend(liText).listview("refresh");
				} else {
					console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 댓글 result -1 ============");
				}
				
		    });
		},
		error: function(jqXHR, textStatus, errorThrown) {
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 댓글 리스트 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 댓글 리스트 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 댓글 리스트 에러 : " + errorThrown);
	    }
	});
}

// 고장상황 상세 내용만 재 조회
function getFaultContent() {
	
	$.ajax({
		url: url + "FaultNotiDetail",
		type: "post",
		timeout: 10 * 1000,
		data: {notiseqnum:notiseqnum},
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val) {
				console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황 상세화면 내용 업데이트 ============ notiseqnum : " + val.notiseqnum);
				//	본문 데이터 셋팅
				$("#detail_subject").text(val.SUBJECT);
				$("#detail_writeDate").text(val.WRITEDATE);
				$("#detail_writerName").text(val.WRITERNAME);
				$("#detail_services").text(val.SERVICES);
				$("#detail_addr").text("detail_addr");
				if(val.TT_YN == "Y") {
					$("#detail_vocCnt").text("총발생 : " + val.TOTAL_VOC_CNT);
				} else {
					$("#detail_vocCnt").text("없음");
				}
				$("#detail_officeName").text(val.OFFICENAMES);
				$("#detail_content").text(val.CONTENT);
				
				if(pollingDate_detail == null) {
					pollingDate_detail = val.WRITEDATE;		// 파라미터용으로 따로 저장
				}
				setOfficeName = val.OFFICENAMES;			// office name을 전송 파라미터용도로 따로 저장
				
		    });
		},
		error: function(jqXHR, textStatus, errorThrown) {
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 내용 업데이트 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 내용 업데이트 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황 상세화면 내용 업데이트 에러 : " + errorThrown);
	    }
	});
}

// 코멘트 seqNum 최대값 산출
function getMaxValue() {
	var maxSeqNum = Math.max.apply(null, commentSeqArray);
	console.log(alarmList_noti_detail_debugPrefix + "Max Comment SeqNum = " + maxSeqNum);
	
	return maxSeqNum;
}

function showMap() {
	var position = new daum.maps.LatLng(geocodeLat, geocodeLng);
	daum_map = new daum.maps.Map(document.getElementById('map_canvas'), {
		center : position,
		level : 4,
		mapTypeId : daum.maps.MapTypeId.ROADMAP
	});

	//원 그리기
	var circle = new daum.maps.Circle({
		center : new daum.maps.LatLng(geocodeLat, geocodeLng),
		radius : 500,
		strokeWeight : 4,
		strokeColor : "#F10000",
		strokeOpacity : 0.3,
		fillOpacity : 0.1
	});
	circle.setMap(daum_map);
	
	var marker = new daum.maps.Marker({ position : position });
	marker.setMap(daum_map);

	var infowindow = new daum.maps.InfoWindow({
		content: '<p style="margin:7px 22px 7px 12px;font:12px/1.5 sans-serif"><h1><a href="demo.html">국사 정보 상세보기</a></h1></p>',
		removable : true
	});
	
	daum.maps.event.addListener(marker, "click", function() {
		infowindow.open(daum_map, marker);
	});
	
	//	맵 컨트롤러
	var zoomControl = new daum.maps.ZoomControl();
	daum_map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);
	var mapTypeControl = new daum.maps.MapTypeControl();
	daum_map.addControl(mapTypeControl, daum.maps.ControlPosition.TOPRIGHT);
}

function setMarker() {
	console.log(alarmList_noti_detail_debugPrefix + "============ setMarker() ============");
	
	var marker = new Array();
	var infowindow = new Array();
	
	var points = [
	     		  	new daum.maps.LatLng(37.538779843072824,127.00200500605618),
	     			new daum.maps.LatLng(37.538635699652154,127.00030778301571),
	     			new daum.maps.LatLng(37.537338259427315,126.9998325645435),
	     			new daum.maps.LatLng(37.53377026138633,127.00288736856231),
	     			new daum.maps.LatLng(37.534941239454476,127.00920075758009)
	     		];
	
	for(var i = 0; i < points.length; i++) {
		marker[i] = new daum.maps.Marker({ position: points[i] });
		marker[i].setMap(daum_map);
	}
	
	for(var i = 0; i < points.length; i++) {
		
		marker[i].index = i;
		
		infowindow[i] = new daum.maps.InfoWindow({
			content: "<p style='margin:7px 22px 7px 12px;font:12px/1.5 sans-serif'><strong>개발자"+i+"</strong><br><a href='tel:010-8824-6723'>010-8824-6723</a></p>",
			removable : true
		});
		
		daum.maps.event.addListener(marker[i], "click", function() {
			for(var i = 0; i < marker.length; i++) {
				infowindow[i].close();
			}
			infowindow[this.index].open(daum_map, marker[this.index]);
		});
	}

//	var position = new daum.maps.LatLng(36.3665751, 127.4046362);
//	var marker = new daum.maps.Marker({ position : position });
//	marker.setMap(daum_map);
}

function getGeocode(faultLocation) {
	console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding start : " + faultLocation + " ============");
	$.ajax({
		url: "http://maps.googleapis.com/maps/api/geocode/json",
	    type: 'get',
	    dataType: "json",
		timeout: 10 * 1000,
		data: {address:faultLocation, sensor:false},
		success: function (result) {
			console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding success============");
			
			var results = result.results;

			$.each(results, function(key, val) {
				geocodeLat = val.geometry.location.lat;
				geocodeLng = val.geometry.location.lng;
		    });
		},
		error: function(jqXHR, textStatus, errorThrown) {
	        console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding error ============ : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding error ============ : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding error ============ : " + errorThrown);
	    }
	}).done(function() {
		console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding Lat : "+ geocodeLat +"============");
		console.log(alarmList_noti_detail_debugPrefix + "============ Geocoding Lng : "+ geocodeLng +"============");
		
		showMap();
	});
}
// 고장 상황(진행) 상세 지도 보기
$(document).on("pageshow","#page_alarmList_detail_map",function(event) {
	
	var header = $("div[data-role='header']:visible");
	var footer = $("div[data-role='footer']:visible");
	var content = $("div[data-role='content']:visible");
	var viewport_height = $(window).height();

	var content_height = viewport_height - header.outerHeight() - footer.outerHeight();
	/* Trim margin/border/padding height */
	content_height -= (content.outerHeight() - content.height());
	// 디바이스에 사이즈에 동적으로 map height를 설정
	$("#map_canvas").css('min-height', content_height);
	// 맵을 그린다.
	
	$("#btn_getWorker").click(function() {
		setMarker();
	});
	
	getGeocode(faultLocation);
});

// 고장 상황(진행)상세 댓글 + 사진 입력
$(document).on("pagebeforeshow","#page_alarmList_detail_capture",function(event) {
	$('#btn_captureImg').click(function() {
		take_pic();
	});
	$('#btn_loadImg').click(function() {
		album_pic();
	});
	$('#btn_setComment_capture').click(function() {
		fileUpload();
	});
});

//	고장 상황(진행) 상세 페이지
$(document).on("pagebeforeshow","#page_alarmList_detail",function(event) {
	// zoom enable
	myScroll = new iScroll('contentWrapper', { zoom: true });
	// 상세 페이지 폴링
	interval_detail = setInterval(function(){
		faultNotiPolling();
	}, 10*1000);
	
	$("#btn_setLocation").click(function () {
		setLocation();
	});
	$("#btn_setReport").click(function () {
		setReport();
	});
	// 상세보기 화면에서 팝업 창 생성 시 Polling stop & start
	$( "#popupNested" ).popup({
		  afteropen: function( event, ui ) {
			if(interval_detail != null) {
				clearInterval(interval_detail); 
				console.log(alarmList_noti_detail_debugPrefix + "========= on Pause ========= \n고장상황(진행) 상세 페이지 폴링 중지, Polling Number => " + interval_detail);
			}
		  }
	});
	$( "#popupNested" ).popup({
		  afterclose: function( event, ui ) {
				if(interval_detail != null) {
					interval_detail = setInterval(function(){
						faultNotiPolling();
					}, 10*1000);
					console.log(alarmList_noti_detail_debugPrefix + "========= on Resume ========= \n고장상황(진행) 상세 페이지 폴링 시작, Polling Number => " + interval_detail);
				}
		  }
	});
	$("#btn_setComment_text").click(function () {	// 폼 전송 전 데이터 셋팅
		setComment();
	});
	getAlarmDetailPage();		// 상세 페이지 출력
	$('#myForm_onlyComment').ajaxForm(options);		// ajax 폼 전송
});

$(document).on("pageshow","#page_alarmList_detail",function(event) {
	var header_height  = $('#detail_header').outerHeight();
    var footer_height  = $('#detail_footer').outerHeight();

    console.log(alarmList_noti_detail_debugPrefix + "================ toolbar size ================");
	console.log(alarmList_noti_detail_debugPrefix + "headerHeight = " + header_height +  ", footerHeight = " + footer_height);
	
	$( '#contentWrapper' ).css( "top", header_height );
	$( '#contentWrapper' ).css( "bottom", footer_height );
	
	// iScroll Content Resize
	$(window).on('scrollstart', function () {
		console.log(alarmList_noti_detail_debugPrefix + "========= myScroll.refresh!! =========");
		myScroll.refresh();
	});
});
// 고장 상황(진행) 페이지 이동 시 폴링 인터벌 해제
$(document).on("pagebeforehide","#page_alarmList_detail",function(event) {
	console.log(alarmList_noti_detail_debugPrefix + "========= 고장상황(진행) 상세화면 pagebeforehide :  Polling Stop, PollingDate init ========= ");
	clearInterval(interval_detail); // stop the interval
	commentSeqArray = new Array();	// 상세화면 이동 시 댓글 번호 배열 초기화
	pollingDate_detail = null;		// 상세화면 이동 시 PollingDate 초기화
});

// 고장 상황(완료)
$(document).on("pagebeforehide","#page_alarmList_success",function(event) {
	getAlarmDetailPage();
});