/**
 *		alarmList_noti_detail.js
 */

var alarmList_noti_detail_debugPrefix = "[alarmList_noti_detail.js] : ";

var pictureSource;   // picture source
var destinationType; // sets the format of returned value 
var imgUrl = "";
var notiseqnum = "";
var setOfficeName = "";

function take_pic() {
    navigator.camera.getPicture(onPhotoDataSuccess, function(ex) {
        alert("Camera Error!");
    }, { quality : 30, destinationType: destinationType.DATA_URL });
}

function album_pic() { 
    navigator.camera.getPicture(onPhotoURISuccess, function(ex) {
            alert("Camera Error!"); }, 
            { quality: 30, 
        destinationType: destinationType.FILE_URI,
        // Android Quirk: Camera.PictureSourceType.PHOTOLIBRARY and 
        // Camera.PictureSourceType.SAVEDPHOTOALBUM display the same photo album.
        sourceType: pictureSource.SAVEDPHOTOALBUM });
}

function captureError(error) {
    var msg = 'An error occurred during capture: ' + error.code;
    navigator.notification.alert(msg, null, 'Error!');
}
function formatError(error) {
    alert("Error getting file format data: " + error.code); 
}

function onPhotoDataSuccess(imageData) {
  var smallImage = document.getElementById('smallImage');
  smallImage.style.display = 'block';
  smallImage.src = "data:image/jpeg;base64," + imageData;
  
  imgUrl = imageData;
  
  console.log(alarmList_noti_detail_debugPrefix + $("#smallImage").attr("src"));
  console.log(alarmList_noti_detail_debugPrefix + "img data load end");

}

function onPhotoURISuccess(imageURI) {
  var smallImage = document.getElementById('smallImage');
  smallImage.style.display = 'block';
  smallImage.src = imageURI;
  console.log(alarmList_noti_detail_debugPrefix + $("#smallImage").attr("src"));
  console.log(alarmList_noti_detail_debugPrefix + "img data load end");
  
  imgUrl = imageURI;
  console.log(alarmList_noti_detail_debugPrefix + "imgURL = " + imgUrl);
  
//  for (var i=0; i < imageURI.length; i++) {
//	  binaryImgData +=imageURI[i].charCodeAt(0).toString(2) + " ";
//  }
}

function getPositionSuccess(position) {
    var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    
    console.log(alarmList_noti_detail_debugPrefix + "latitude = " + latitude);
    console.log(alarmList_noti_detail_debugPrefix + "longitude = " + longitude);
    
    setLocationInfo(latitude, longitude);
}

function getPositionError(error) {
    console.log(alarmList_noti_detail_debugPrefix + 'code: ' + error.code + '\n' + 'message: ' + error.message + '\n');
}

//현재 위치 전송 기능
var setLocation = function() {
	function onConfirm(button) {
		if(button == "2") {
			navigator.geolocation.watchPosition(getPositionSuccess, getPositionError);
			console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송");
		} else {
			console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 취소");
		}	
	}
	navigator.notification.confirm(
		'현재 위치를 서버로 전송하시겠습니까?', // message
		onConfirm, // callback to invoke with index of button pressed
		'현재 위치 전송', // title
		'취소,확인'
	);
};

function getAlarmDetailPage() {
	$.mobile.loading( "show", {
		  text: "로딩중...",
		  textVisible: true,
		  theme: "z",
		  html: ""
	});
	
	notiseqnum = Request("notiseqnum");

	console.log(alarmList_noti_detail_debugPrefix + " request notiseqnum = " + notiseqnum);
	
	$.ajax({
		url: url + "FaultNotiDetail",
		type: "post",
		timeout: 10 * 1000,
		dataType: "json",
		data: {notiseqnum:notiseqnum},
		success: function (result) {
			var bodyData = result.body;
			var resultFlag = "";
			
			$.each(bodyData, function(key, val){
				console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황[완료] 상세 ============");
				
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
					if(key == "result") {
						resultFlag = "NOK";
					}
				});
			
				$("#detail_subject").text(val.SUBJECT);
				$("#detail_writeDate").text(val.LASTUPDATEDATE);
				$("#detail_writerName").text(val.WRITERNAME);
				$("#detail_services").text(val.SERVICES);
				$("#detail_addr").text("detail_addr");
				if(val.TT_YN == "Y") {
					$("#detail_vocCnt").text("총발생 : " + val.TOTAL_VOC_CNT);
				} else {
					$("#detail_vocCnt").text("없음");
				}
				$("#detail_officeName").text(val.OFFICENAMES);
				// office name을 전송 파라미터용도로 따로 저장
				setOfficeName = val.OFFICENAMES;
				$("#detail_content").text(val.CONTENT);
				
				// 고장 상황 상세 댓글
				var commentData = result.comment;
				var liText = "";
				var userType = "";
				
				$.each(commentData, function(key, val){
					console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황[완료] 상세 댓글 ============");
					
					$.each(val, function(key, val) {
						console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
					});
					
					if(val.USERTYPE == "1") {
						userType = "[현장]";
					} else {
						userType = "[센터]";
					}
					
					if(val.FILEBINARY == null) {
						liText += 	"<li>" +
					        			"<p><b>" + val.WRITEDATE + " (" + val.WRITERNAME + ")</b></p>" +
					        			"<p>" + userType + " " + val.CONTENT + "</p>" +
				        			"</li>";
					} else {
						liText += 	"<li>" +
					        			"<p><b>" + val.WRITEDATE + " (" + val.WRITERNAME + ")</b></p>" +
					        			"<p>" + userType + " " + val.CONTENT + "</p>" +
					        			"<p align='center'><img src='data:image/jpeg;base64," + val.FILEBINARY + "' width='250px'></p>" +
				        			"</li>";
					}
				});
				
				$("#Detail_commentList").append(liText).listview("refresh");
		    });
			// 화면에 리스트 출력이 완료되면 loader를 종료
			$.mobile.hidePageLoadingMsg();
			console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황[완료] 상세 출력 완료 ============");
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
//	        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황[완료] 상세 리스트 출력 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황[완료] 상세 리스트 출력 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황[완료] 상세 리스트 출력 에러 : " + errorThrown);
	    }
	});
}

//	댓글 작성
function setInsertComment() {
	
	$.mobile.loading( "show", {
		  text: "댓글 작성 중...",
		  textVisible: true,
		  theme: "z",
		  html: ""
	});
	
	var setNotiSeqNum = notiseqnum;
	var setWriterId = loginId;
	var setWriterName = encodeURIComponent(userName);	// utf-8 encode
	var setUserType = "1";	// 현장
	var setUserState = "1";	// 메세지 접수
	var	setContent = encodeURIComponent($("#input_comment").val());		// utf-8 encode
	var setFileBinary = binaryImgData;
	
	console.log(alarmList_noti_detail_debugPrefix + "comment input parameter");
	console.log(alarmList_noti_detail_debugPrefix + "setNotiSeqNum = " + setNotiSeqNum);
	console.log(alarmList_noti_detail_debugPrefix + "setWriterId = " + setWriterId);
	console.log(alarmList_noti_detail_debugPrefix + "setWriterName = " + setWriterName);
	console.log(alarmList_noti_detail_debugPrefix + "setUserType = " + setUserType);
	console.log(alarmList_noti_detail_debugPrefix + "setUserState = " + setUserState);
	console.log(alarmList_noti_detail_debugPrefix + "setContent = " + setContent);
	console.log(alarmList_noti_detail_debugPrefix + "setFileBinary = " + setFileBinary);
	console.log(alarmList_noti_detail_debugPrefix + "comment input parameter end");
	
	$.ajax({
		url: url + "FaultNotiComment",
		type: "post",
		timeout: 10 * 1000,
		dataType: "json",
		data: {notiseqnum:setNotiSeqNum, writerid:setWriterId, writername:setWriterName, usertype:setUserType, userstate:setUserState, content:setContent, filebinary:setFileBinary},
		success: function (result) {
			var bodyData = result.body;
			console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황[완료] 댓글 작성 ============");
			
			$.each(bodyData, function(key, val){
				if(bodyData.result == "0") {
					console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황[완료] 댓글 작성 완료 ============");
				} else {
					console.log(alarmList_noti_detail_debugPrefix + "============ 고장상황[완료] 댓글 작성 실패 ============");
					console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
					alert(val.errMsg);
				}
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
				});
		    });
			// 화면에 리스트 출력이 완료되면 loader를 종료
			$.mobile.hidePageLoadingMsg();
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
//	        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황[완료] 댓글 작성 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "고장상황[완료] 댓글 작성 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "고장상황[완료] 댓글 작성 에러 : " + errorThrown);
	    }
	});
}

//	현재 위치 전송
function setLocationInfo(latitude, longitude) {
	
	$.mobile.loading( "show", {
		  text: "현재 위치 전송 중...",
		  textVisible: true,
		  theme: "z",
		  html: ""
	});
	
	var setWorkerId = loginId;
	var setLatLng = latitude + "," + longitude;
	var setReverseGeocoding = "";
	
	$.ajax({
	    url: "http://maps.googleapis.com/maps/api/geocode/json",
	    timeout: 10 * 1000,
	    type: 'get',
	    dataType: "json",
	    data:{latlng:setLatLng, sensor:true},
	    cache: false,
	    success: function(result){
	    	var resultData = result.results;
	    	console.log(alarmList_noti_detail_debugPrefix + "============ Reverse Geocoding 완료 ============");
	    	$.each(resultData, function(key, val){
	    		if(key == "0") {
	    			setReverseGeocoding = val.formatted_address;
	    			console.log(alarmList_noti_detail_debugPrefix + "setReverseGeocoding = " + setReverseGeocoding);
	    		}
		    	$.each(val, function(key, val){
		    		console.log(alarmList_noti_detail_debugPrefix + key + "," + val);
		    	});
	    	});
	    }
	}).done (function() {
		$.ajax({
			url: url + "CurLocRegist",
			type: "post",
			timeout: 10 * 1000,
			dataType: "json",
			data: {workerid:setWorkerId, latitude:latitude, longitude:longitude, address:setReverseGeocoding},
			success: function (result) {
				var bodyData = result.body;
				console.log(alarmList_noti_detail_debugPrefix + "============ 현재 위치 전송 ============");
				console.log(alarmList_noti_detail_debugPrefix + "workerid = " + setWorkerId);
				console.log(alarmList_noti_detail_debugPrefix + "latitude = " + latitude);
				console.log(alarmList_noti_detail_debugPrefix + "longitude = " + longitude);
				console.log(alarmList_noti_detail_debugPrefix + "address = " + setReverseGeocoding);
				
				$.each(bodyData, function(key, val){
					if(val.result == "0") {
						console.log(alarmList_noti_detail_debugPrefix + "============ 현재 위치 전송 완료 ============");
					} else {
						console.log(alarmList_noti_detail_debugPrefix + "============ 현재 위치 전송 실패 ============");
						console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
						alert(val.errMsg);
					}
					$.each(val, function(key, val) {
						console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
					});
			    });
				// 화면에 리스트 출력이 완료되면 loader를 종료
				$.mobile.hidePageLoadingMsg();
			},
			error: function(jqXHR, textStatus, errorThrown) {
				$.mobile.hidePageLoadingMsg();
//		        alert(textStatus); // this will be "timeout"
		        console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 에러 : " + jqXHR.status);
		        console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 에러 : " + jqXHR.responseText);
				console.log(alarmList_noti_detail_debugPrefix + "현재 위치 전송 에러 : " + errorThrown);
		    }
		});
	});
}

//	상황 보고
function setReport() {
	
	$.mobile.loading( "show", {
		  text: "상황 보고...",
		  textVisible: true,
		  theme: "z",
		  html: ""
	});
	
	console.log(alarmList_noti_detail_debugPrefix + "============ 상황 보고 Parameter ============");
	
	var workerid = loginId;
	var userstate = $(":input:radio[name=detail_report]:checked").val();
	var destination = setOfficeName;
	var writenrname = userName;
	var usertype = "1";	//	현장 작업자 코드 1 고정;
	
	console.log(alarmList_noti_detail_debugPrefix + "workerid = " + workerid);
	console.log(alarmList_noti_detail_debugPrefix + "userstate = " + userstate);
	console.log(alarmList_noti_detail_debugPrefix + "destination = " + destination);
	console.log(alarmList_noti_detail_debugPrefix + "notiseqnum = " + notiseqnum);
	console.log(alarmList_noti_detail_debugPrefix + "writenrname = " + writenrname);
	console.log(alarmList_noti_detail_debugPrefix + "usertype = " + usertype);
	
	$.ajax({
		url: url + "FaultNotiReport",
		type: "post",
		timeout: 10 * 1000,
		dataType: "json",
		data: {workerid:workerid, userstate:userstate, destination:destination, notiseqnum:notiseqnum, writername:writenrname, usertype:usertype},
		success: function (result) {
			var bodyData = result.body;
			
			$.each(bodyData, function(key, val){
				if(val.result == "0") {
					console.log(alarmList_noti_detail_debugPrefix + "============ 상황 보고 완료 ============");
					console.log(url);
				} else {
					console.log(alarmList_noti_detail_debugPrefix + "============ 상황 보고 실패 ============");
					console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
					alert(val.errMsg);
				}
				$.each(val, function(key, val) {
					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
				});
		    });
			// 화면에 리스트 출력이 완료되면 loader를 종료
			$.mobile.hidePageLoadingMsg();
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
//		        alert(textStatus); // this will be "timeout"
	        console.log(alarmList_noti_detail_debugPrefix + "상황 보고 에러 : " + jqXHR.status);
	        console.log(alarmList_noti_detail_debugPrefix + "상황 보고 에러 : " + jqXHR.responseText);
			console.log(alarmList_noti_detail_debugPrefix + "상황 보고 에러 : " + errorThrown);
	    }
	}).done( function() {
		$("#Detail_commentList").empty();
		getAlarmDetailPage();
	});
}

function mapInitialize() {
	  var myLatlng = new google.maps.LatLng(-25.363882,131.044922);
	  var mapOptions = {
	    zoom: 4,
	    center: myLatlng
	  }
	  var map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

	  var marker = new google.maps.Marker({
	      position: myLatlng,
	      map: map,
	      title: 'Hello World!'
	  });
}

//javascript로 구현한 Request
function Request(valuename) {
	var rtnval = "";
	var nowAddress = unescape(location.href);
	var parameters = (nowAddress.slice(nowAddress.indexOf("?")+1,nowAddress.length)).split("&");

	for(var i = 0 ; i < parameters.length ; i++) {
		var varName = parameters[i].split("=")[0];
		if(varName.toUpperCase() == valuename.toUpperCase())
		{
			rtnval = parameters[i].split("=")[1];
			break;
		}
	}
	return rtnval;
}

function setFormData() {
	alert(alarmList_noti_detail_debugPrefix + "setFormData() call");
	
	var imgFile = "";
	var setContent = $("#content").val();
	if(imgUrl != null) {
		var img = new Image("300", "300");
		img.src = imgUrl;
		
		imgFile = img;
	}
	$("#notiseqnum").val(notiseqnum);
	$("#writerid").val(loginId);
	$("#writername").val(userName);
	$("#usertype").val("1");
	$("#userstate").val("0");
//	$("#content").val(setContent);
//	if(imgUrl != null) {
//		$("#file").attr("src", imgUrl);
////		$("#file").val(imgUrl);
//	}
	
//	console.log(alarmList_noti_detail_debugPrefix + "notiseqnum = " + $("#notiseqnum").val());
//	console.log(alarmList_noti_detail_debugPrefix + "writerid = " + $("#writerid").val());
//	console.log(alarmList_noti_detail_debugPrefix + "writername = " + $("#writername").val());
//	console.log(alarmList_noti_detail_debugPrefix + "usertype = " + $("#usertype").val());
//	console.log(alarmList_noti_detail_debugPrefix + "userstate = " + $("#userstate").val());
//	console.log(alarmList_noti_detail_debugPrefix + "content = " + $("#content").val());
//	console.log(alarmList_noti_detail_debugPrefix + "imgFile = " + $("#file").val());
	
	console.log(alarmList_noti_detail_debugPrefix + "notiseqnum = " + notiseqnum);
	console.log(alarmList_noti_detail_debugPrefix + "writerid = " + loginId);
	console.log(alarmList_noti_detail_debugPrefix + "writername = " + userName);
	console.log(alarmList_noti_detail_debugPrefix + "usertype = " + "1");
	console.log(alarmList_noti_detail_debugPrefix + "userstate = " + "0");
	console.log(alarmList_noti_detail_debugPrefix + "content = " + setContent);
	console.log(alarmList_noti_detail_debugPrefix + "imgFile = " + imgFile);
	
//	$("#btn_formSubmit").click();
	
//	var tempData = new FormData();
//	
//	tempData.append("notiseqnum" , notiseqnum);
//	tempData.append("writerid", loginId);
//	tempData.append("writername", userName);
//	tempData.append("usertype", "1");
//	tempData.append("userstate", "0");
//	tempData.append("content", setContent);
//	tempData.append("file", imgUrl);
//	
////	tempData.serialize();
//	
//	$.ajax({
//		url: "http://192.168.25.17:8080/moss/FaultNotiComment",
//		type: "post",
//		timeout: 10 * 1000,
////		enctype : 'multipart/form-data',
////		data: {notiseqnum:notiseqnum, writerid:loginId, writername:userName, usertype:"1", userstate:"0", content:"test", fliebinary:imgFile},
//		data: tempData,
//		cache: false,
//		contentType: false,
//        processData: false,
//		success: function (result) {
//			var bodyData = result.body;
//			
//			$.each(bodyData, function(key, val){
//				if(val.result == "0") {
//					console.log(alarmList_noti_detail_debugPrefix + "============ 댓글 작성 완료 ============");
//					console.log(url);
//				} else {
//					console.log(alarmList_noti_detail_debugPrefix + "============ 댓글 작성 실패 ============");
//					console.log(alarmList_noti_detail_debugPrefix + val.errMsg);
//					alert(val.errMsg);
//				}
//				$.each(val, function(key, val) {
//					console.log(alarmList_noti_detail_debugPrefix + key + ", " + val);
//				});
//		    });
//			// 화면에 리스트 출력이 완료되면 loader를 종료
//			$.mobile.hidePageLoadingMsg();
//		},
//		error: function(jqXHR, textStatus, errorThrown) {
//			$.mobile.hidePageLoadingMsg();
////		        alert(textStatus); // this will be "timeout"
//	        console.log(alarmList_noti_detail_debugPrefix + "댓글 작성 에러 : " + jqXHR.status);
//	        console.log(alarmList_noti_detail_debugPrefix + "댓글 작성 에러 : " + jqXHR.responseText);
//			console.log(alarmList_noti_detail_debugPrefix + "댓글 작성 에러 : " + errorThrown);
//	    }
//	});
} 

function showRequest(formData, jqForm, options) { 
    var queryString = $.param(formData); 
    alert('About to submit: \n\n' + queryString); 

    return true; 
} 

function showResponse(responseText, statusText, xhr, $form)  { 
    alert('status: ' + statusText + '\n\nresponseText: \n' + responseText + 
        '\n\nThe output div should have already been updated with the responseText.'); 
} 

var options = { 
        beforeSubmit:  showRequest,  // pre-submit callback 
        success:       showResponse,  // post-submit callback 
        // other available options: 
        url:       "http://192.168.25.18:8080/moss/FaultNotiComment",         // override for form's 'action' attribute 
        type:      "post",        // 'get' or 'post', override for form's 'method' attribute 
        dataType:  "json",        // 'xml', 'script', or 'json' (expected server response type)
        clearForm: true,        // clear all form fields after successful submit 
        resetForm: true,        // reset the form after successful submit 
        // $.ajax options can be used here too, for example: 
        timeout:   10*1000
};

$(document).on("pagebeinit","#page_alarmList_detail_map",function(event) {
	alert("pagebeinit \n page_alarmList_detail_map");

});

$(document).on("pageshow","#page_alarmList_detail_capture",function(event) {
	
	$('#btn_captureImg').click(function() {
		take_pic();
	});
	$('#btn_loadImg').click(function() {
		album_pic();
	});
	$('#btn_insertComment').click(function() {
		setInsertComment();
	});

//    $('#myForm').ajaxForm(function() {
//        alert("Thank you for your comment!");
//        setFormData();
//    });
	$('#myForm').ajaxForm(options); 

//notiseqnum
//writerid
//writername
//usertype
//userstate
//content
//file 
});

//	고장 상황 상세 페이지 로딩
$(document).on("pagebeforeshow","#page_alarmList_detail",function(event) {
	
	$("#btn_setLocation").click(function () {
		setLocation();
	});
	$("#btn_setReport").click(function () {
		setReport();
	});
	
	getAlarmDetailPage();
	
});