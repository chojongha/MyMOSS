/**
 * common.js
 */
var commonDebugPrefix = "[common.js] : ";
var deviceInfo = "";
var userID = "";
var db = 0;
var currentLat = "";
var currentLng = "";
var watchID = null;
var appCheckTimer = null;
//	개발 서버 URL
//var url = "http://192.168.25.7:8080/moss/";
//var url = "http://192.168.25.18:8080/moss/";
//	TEST 서버 URL
//var url = "http://10.217.76.186:8081/moss/";
//	운용 서버 URL
var url = "http://moss.kt.com/moss/";
// 올레네비 미설치시 설치 유도 url 
var appstoreUrl = "https://itunes.apple.com/kr/app/id390369834";
var googlePlayUrl = "https://play.google.com/store/apps/details?hl=ko&id=kt.navi";
// 상황보고용 코드테이블 값 배열
var moveStateCode = new Array();
var moveStateCodeVal = new Array();
//	페이지별 현재위치 전송 팝업 Flag
var setLocPopupFlag = true;
//	폰갭 버그로 인한 확인창 중복 호출 방지 Flag
var confirmFlag = true;

//	menuPanel event Controller
function commonMenuPanelControl() {
	// menuPanel 별도의 스크롤 생성
	if (deviceInfo != "Android") {
		var myPanelScroll = new iScroll('menuPanel', {bounce: false});
		//	menuPanel open 시 스크롤 이벤트 제어
		$("#menuPanel").panel({
			  beforeopen: function( event, ui ) {
//				$("#panel_img_ktConsole").attr("src", "../img/menu_remote_d.png");
			  }
		});
		$("#menuPanel").panel({
			open : function(event, ui) {
				myPanelScroll.refresh();
			}
		});
		// 스크롤 이벤트 발생 시 menuPanel 닫기
		$(window).on('scroll', function () {
			$("#menuPanel").panel("close");
		});
	}
}

//Request
function Request(valuename) {
	var rtnval = "";
	var nowAddress = unescape(location.href);
	var parameters = (nowAddress.slice(nowAddress.indexOf("?")+1,nowAddress.length)).split("&");

	for(var i = 0 ; i < parameters.length ; i++) {
		var varName = parameters[i].split("=")[0];
		if(varName.toUpperCase() == valuename.toUpperCase())
		{
			rtnval = parameters[i].split("=")[1];
			break;
		}
	}
	return rtnval;
}

// notification Confirm
function showiOSAlert() {
    navigator.notification.confirm(
    	'iOS에서는 지원되지 않는 기능입니다.',  		// message
        null, // callback
        'KT MOSS',          // title
        '확인'          // buttonName
    );
}

function showCommonAlert(title, message) {
	function showCommonAlertCallback() {
		console.log(commonDebugPrefix + "============== Alert paramter==============");
		console.log(commonDebugPrefix + "title : " + title);
		console.log(commonDebugPrefix + "message : " + message);
    }
    navigator.notification.alert(
    	message,  		// message
    	showCommonAlertCallback, // callback
        title,          // title
        '확인'          // buttonName
    );
}

var mapSetupConfirm = function() {
	function mapSetupConfirmCallback(button) {
		if(button == 2) {
			// OS별 예외처리 분기
    	 	if(deviceInfo == "Android") {
        		CDV.WEBINTENT.startActivity({
        		    action: CDV.WEBINTENT.ACTION_VIEW,
        		    url: googlePlayUrl}, 
        		    function() {}, 
        		    function() {
        		    	alert('Failed to open URL via Android Intent');
        		    }
        		);
    	 	} else {
    	 		window.location.href = appstoreUrl;
    	 	}
		}
	}
	navigator.notification.confirm(
		'올레네비가 설치되어 있지 않습니다.\n설치페이지로 이동하시겠습니까?', // message
		mapSetupConfirmCallback, // callback to invoke with index of button pressed
		'올레네비', // title
		'취소,확인'
	);
};

var logoutConfirm = function() {
	function logoutConfirmCallback(button) {
		if (button == 2) {
			logout();
		}
		confirmFlag = true;
	}
	if(confirmFlag) {
		confirmFlag = false;
		navigator.notification.confirm(
				'로그아웃 하시겠습니까?', // message
				logoutConfirmCallback, // callback to invoke with index of button pressed
				'로그아웃', // title
				'취소,확인' // buttonLabels
			);
	}
};

var showExitConfirm = function() {
	function showExitConfirmCallback(button) {
//		alert('You selected button ' + button);
		if (button == 2) {
			navigator.app.exitApp();
		}
		confirmFlag = true;
	}
	if(confirmFlag) {
		confirmFlag = false;
		navigator.notification.confirm(
				'KT MOSS 앱을 종료하시겠습니까?', // message
				showExitConfirmCallback, // callback to invoke with index of button pressed
				'종료', // title
				'취소,확인' // buttonLabels
			);
	}
};

//	로그아웃 액션
function logout() {
	if (!db) {
		db = window.openDatabase("Database", "1.0", "myDb", 200000);
	}
	// 로그아웃 시 기존 사용자의 설정을 초기화한다.
	db.transaction(userInfoInitDB, errorIntiInfoCB);
}

function userInfoInitSuccess(tx, results) {
	console.log(commonDebugPrefix + "============= 로그아웃 : 사용자 정보 초기화 완료 =============");
	//	로그인을 위해 로그아웃 시 GET파라미터로 regId를 전달.
	if(deviceInfo == "Android") {
		window.location.href = "login.html?getRegId=" + deviceId;
	} else {
		$.mobile.changePage("login.html");
	}
}

function errorIntiInfoCB(err) {
	console.log(commonDebugPrefix + "============= 로그아웃 : 사용자 정보 초기화 실패 =============");
}

function userInfoInitDB(tx) {
	var query = 	"UPDATE MOSS_USERINFO " +
					"SET " +
//					"USERID = null, " +
					"USERPW = null, " +
					"STARTPAGE = 'index.html', " +
					"AUTOLOGINYN = 'N' " +
					"WHERE " + 
					"VERSION = '" + userVersion + "';";
	var queryLog = 	"\nUPDATE MOSS_USERINFO\n" +
					"SET\n" +
//					"USERID = null,\n" +
					"USERPW = null,\n" +
					"STARTPAGE = 'index.html',\n" +
					"AUTOLOGINYN = 'N'\n" +
					"WHERE\n" + 
					"VERSION = '" + userVersion + "';";
	
	console.log(commonDebugPrefix + "============= 로그아웃 : 사용자 정보 초기화 SQL Start ===========");
	console.log(queryLog);
	console.log(commonDebugPrefix + "============= 로그아웃 : 사용자 정보 초기화 SQL END =============");
	tx.executeSql(query, [], userInfoInitSuccess, errorIntiInfoCB);
}

function testURL(str) {
   if(device.platform == "Android"){
       location.href = url + str;
   } else {
       window.open(url + str, '_blank', 'EnableViewPortScale=yes');
   }
}

//파일 읽기
function gotFS(fileSystem) {
    fileSystem.root.getFile("moss_regId.txt", null, gotFileEntry, fail);
}

function gotFileEntry(fileEntry) {
    fileEntry.file(gotFile, fail);
}

function gotFile(file){
    readDataUrl(file);
    readAsText(file);
}

function readDataUrl(file) {
    var reader = new FileReader();
    reader.onloadend = function(evt) {
        console.log(loginDebugPrefix + "=============== Read as ** moss_regId.txt URL ** ===============");
        console.log(loginDebugPrefix + evt.target.result);
    };
    reader.readAsDataURL(file);
}

function readAsText(file) {
    var reader = new FileReader();
    reader.onloadend = function(evt) {
        console.log(loginDebugPrefix + "=============== Read as *** moss_regId.txt ** ===============");
        console.log(loginDebugPrefix + evt.target.result);
        
        deviceId = evt.target.result;
    };
    reader.readAsText(file);
}

function fail(error) {
    console.log(loginDebugPrefix + "=============== file error =============== code : " + error.code);
}

function nullCheck(data) {
	
	//	문자열로 변환하여 비교
	data = String(data);
	
	if(data == null || data == "" || data == "null") {
		return "-";
	} else {
		return data;
	}
}

function onCurrentPosSuccess(position) {
    currentLat = position.coords.latitude;
    currentLng = position.coords.longitude;
    
    console.log(commonDebugPrefix + "============== get Current Location ==============");
    console.log(commonDebugPrefix + "currentLat : " + currentLat);
    console.log(commonDebugPrefix + "currentLng : " + currentLng);
    
    if($.mobile.activePage.is('#page_alarmList_detail_map')){
//		callDaumIntent("daummaps://route?sp=" + currentLat + "," + currentLng + "&ep=" + geocodeLat + "," + geocodeLng + "&by=car");
    	//	안드로이드의 경우 출발~도착 지점의 위도, 경도를 사용하고, iOS의 경우 경도, 위도를 사용한다.
    	if(deviceInfo == "Android") {
    		callDaumIntent("ollehnavi://ollehnavi.kt.com/?method=routeguide&start=(" + currentLat + "," + currentLng + ")&end=(" + geocodeLat + "," + geocodeLng + ")");
    	} else {
    		callDaumIntent("ollehnavi://ollehnavi.kt.com/navigation.req?method=routeguide&start=(" + currentLng + "," + currentLat + ")&end=(" + geocodeLng + "," + geocodeLat + ")&response=ollehmap");
    	}
    } else if($.mobile.activePage.is('#page_transOffice_detail_map')) {
    	if(deviceInfo == "Android") {
    		callDaumIntent("ollehnavi://ollehnavi.kt.com/?method=routeguide&start=(" + currentLat + "," + currentLng + ")&end=(" + geocodeLat + "," + geocodeLng + ")");
    	} else {
    		callDaumIntent("ollehnavi://ollehnavi.kt.com/navigation.req?method=routeguide&start=(" + currentLng + "," + currentLat + ")&end=(" + geocodeLng + "," + geocodeLat + ")&response=ollehmap");
    	}
    }
}

function onCurrentPosError(error) {
    console.log(commonDebugPrefix + 'code: '    + error.code    + '\n' + 'message: ' + error.message + '\n');
    
    if(error.code == 2) {
    	var message = "";
    	if(deviceInfo == "Android") {
    		message = "위치서비스가 비활성화 되어있습니다.\n정상적인 사용을 위해\n환경설정 -> 더보기 -> 위치서비스로 이동하여 [무선 네트워크 사용]을\n활성화하시기 바랍니다.";
    	} else {
    		message = "위치서비스가 비활성화 되어있습니다.\n정상적인 사용을 위해\n설정 -> 개인 정보 보호 -> 위치 서비스로 이동하여\nMOSS의 위치서비스를 활성화하시기 바랍니다.";
    	}
    	showCommonAlert("위치정보 수집 실패", message);
    }
}

function getUserID() {
	return userID;
}

function callDaumIntent(url) {
	//앱 미설치시 예외처리 로직
	var clickedAt = +new Date;
	appCheckTimer = setTimeout(function() { 
	      if (+new Date - clickedAt < 3000){ 
	    	  mapSetupConfirm();
	      }
	}, 2 * 1000);
	
	// OS별 앱 호출 분기
	if(deviceInfo == "Android") {
		CDV.WEBINTENT.startActivity({
		    action: CDV.WEBINTENT.ACTION_VIEW,
		    url: url}, 
		    function() {}, 
		    function() {
		    	alert('Failed to open URL via Android Intent');
		    }
		);
	} else {
		window.location.href = url;
	}
}

function callIntent(appName) {
	if(deviceInfo == "Android") {
		if(appName == 'qtest') {
			CDV.WEBINTENT.startActivity({
			    action: CDV.WEBINTENT.ACTION_VIEW,
			    url: 'qtest://moss'}, 
			    function() {}, 
			    function() {
			    	alert('Failed to open URL via Android Intent');
			    }
			);
		} else if(appName == 'ktConsole') {
			CDV.WEBINTENT.startActivity({
			    action: CDV.WEBINTENT.ACTION_VIEW,
			    url: 'ktConsole://moss'}, 
			    function() {}, 
			    function() {
			    	alert('Failed to open URL via Android Intent');
			    }
			);
		}
	}else {
		showiOSAlert();
	}
}

function callDownloadPage() {
	CDV.WEBINTENT.startActivity({
	    action: CDV.WEBINTENT.ACTION_VIEW,
	    url: 'http://moss.kt.com/moss/index'}, 
	    function() {}, 
	    function() {
	    	alert('Failed to open URL via Android Intent');
	    }
	);
}

function onPause() {
	if(interval_detail != null && $.mobile.activePage.is('#page_alarmList_detail')) {
		clearInterval(interval_detail); // stop the interval
		console.log(commonDebugPrefix + "========= on Pause ========= \n고장상황(진행) 상세 페이지 폴링 중지, Polling Number => " + interval_detail);
	}
	if($.mobile.activePage.is('#page_alarmList_detail_map')) {
		$.mobile.hidePageLoadingMsg();
	}
	if($.mobile.activePage.is('#page_notice_detail')) {
        $.mobile.hidePageLoadingMsg();
    }
	// 다음지도 앱이 설치되었을 경우 다음지도가 호출되며 MOSS 앱은 onPause 상태로 전환 되며 예외처리 타이머를 종료
	if(appCheckTimer != null) {
		clearTimeout(appCheckTimer);
		console.log(commonDebugPrefix + "========= on Pause ========= \n다음지도 설치되었음");
	}
	if($.mobile.activePage.is('#page_manual_detail')) {			
		$.mobile.hidePageLoadingMsg();
		filedownloadFlag=false;
	}
}

function onResume() {
	if($.mobile.activePage.is('#page_alarmList_detail')) {
		interval_detail = setInterval(function(){
			faultNotiPolling();
		}, 10*1000);
		console.log(commonDebugPrefix + "========= on Resume ========= \n고장상황(진행) 상세 페이지 폴링 시작, Polling Number => " + interval_detail);
	}
	// on Resume 시 리스트 재조회
	if($.mobile.activePage.is('#page_alarmList_noti')) {
		console.log(commonDebugPrefix + "========= on Resume : 진행 리스트 재조회 ========= ");
		$("#btn_refresh").click();
	}
	if($.mobile.activePage.is('#page_alarmList_success')) {
		console.log(commonDebugPrefix + "========= on Resume : 완료 리스트 재조회 ========= ");
		$("#btn_refresh").click();
	}
	if($.mobile.activePage.is('#page_alarmList_TFMS')) {
		console.log(commonDebugPrefix + "========= on Resume : TT 리스트 재조회 ========= ");
		$("#btn_refresh").click();
	}
}

var onDeviceReady = function() {
	pictureSource = navigator.camera.PictureSourceType; 	// api-camera Photo URI
	destinationType = navigator.camera.DestinationType;
	
	deviceInfo = device.platform;							// device Info load
	
	document.addEventListener("pause", onPause, false);		// device pause, resume events
	document.addEventListener("resume", onResume, false);
	
	navigator.geolocation.getCurrentPosition(onCurrentPosSuccess, onCurrentPosError);	// 어플 구동 시 현재 위치 정보 수집
	
	// 안드로이드 backButton 예외처리
	if(deviceInfo == "Android") {
		document.addEventListener("backbutton", function(e){
			//	메인화면 또는 로그인화면에서 백버튼 터치 시 프로그램 종료 팝업 발생
		    if($.mobile.activePage.is('#page_index') || $.mobile.activePage.is('#page_login')){
		        e.preventDefault();
		        showExitConfirm();
		    }
		    //	상황공유 리스트에서 백버튼 이동 시 메인화면으로 이동
		    else if($.mobile.activePage.is('#page_alarmList_noti') || $.mobile.activePage.is('#page_alarmList_success') ||
		    		$.mobile.activePage.is('#page_alarmList_TFMS')) {
		    		$.mobile.changePage('index.html');
		    }
		    //	고장상황 진행 상세 화면에서 백버튼 이동 시 고장상황 진행 리스트로 이동
		    else if($.mobile.activePage.is('#page_alarmList_detail')) {
		    		$.mobile.changePage('alarmList_noti.html');
		    }
		    //	고장상황 진행 상세화면 내 페이지에서 백버튼 이동 시 고장상황 진행 상세화면으로 이동
		    else if($.mobile.activePage.is('#page_alarmList_detail_capture') || $.mobile.activePage.is('#page_alarmList_detail_map') ||
		    		$.mobile.activePage.is('#page_alarmManualList') || $.mobile.activePage.is('#page_contact_list')) {
		    		$.mobile.changePage('alarmList_noti_detail.html?notiseqnum='+ notiseqnum);
		    }
		    //	고장상황 완료 화면에서 백버튼 이동 시 고장상황 완료 리스트로 이동
		    else if($.mobile.activePage.is('#page_alarmList_detail_success')) {
		    		$.mobile.changePage('alarmList_success.html');
		    }
		    //	TFMS 상세화면에서 백버튼 이동 시 TFMS 리스트로 이동
		    else if($.mobile.activePage.is('#page_alarmList_detail_TFMS')) {
		    		$.mobile.changePage('alarmList_TFMS.html');
		    }
		    //	업무 매뉴얼, 사업장 정보 리스트에서 백버튼 이동 시 메인화면으로 이동
		    else if($.mobile.activePage.is('#page_manualList') || $.mobile.activePage.is('#page_transOffice')) {
		    		$.mobile.changePage('index.html');
		    }		    
		    //	업무매뉴얼 상세 화면에서 백버튼 이동시 업무매뉴얼 리스트로 이동
		    else if($.mobile.activePage.is('#page_manual_detail')){
		    	if(filedownloadFlag==true){	//	파일 다운로드 중 일때는 백버튼 제한
		    		e.preventDefault();
		    	}else if(filedownloadFlag==false){
		    		$.mobile.changePage('board_manual.html');
		    	}		 
		    }
		    //	고장상황 업무매뉴얼 상세 화면에서 백버튼 이동시 고장상황 업무매뉴얼 리스트로 이동
		    else if($.mobile.activePage.is('#page_alarmManual_detail')){
		    	if(filedownloadFlag==true){	// 파일 다운로드 중 일때는 백버튼 제한
		    		e.preventDefault();
		    	}else if(filedownloadFlag==false){
		    		$.mobile.changePage('alarmList_noti_detail_manual.html?checked=' + beforeChecked);
		    	}		    		    	
		    }
		    //	사업장 상세 화면에서 백버튼 이동 시 사업장 리스트로 이동
		    else if($.mobile.activePage.is('#page_transOffice_detail')){
		    	$.mobile.changePage('transOffice.html');
		    }
		    //	지도에서 들어온 사업장 상세 화면에서 백버튼 이동 시 고장상황 지도 화면으로 이동
		    else if($.mobile.activePage.is('#page_map_transOffice_detail')){
		    	$.mobile.changePage('alarmList_noti_detail_map.html');
		    }
		    //	사업장 상세 화면 내 페이지에서 백버튼 이동 시 사업장 상세 화면으로 이동 
		    else if($.mobile.activePage.is('#page_transOffice_detail_map')){
		    	$.mobile.changePage('transOffice_detail.html?workplaceSeqNum=' + workplaceSN);
		    }
		    //   공지사항 리스트에서 백버튼 이동 시 메인화면으로 이동
            else if($.mobile.activePage.is('#page_notice_list')){
                    $.mobile.changePage('index.html');
            }
	       //   공지사항 상세 화면에서 백버튼 이동시 공지사항 리스트로 이동
		    else if($.mobile.activePage.is('#page_notice_detail')){
                if(filedownloadFlag==false){
                    $.mobile.changePage('board_notice.html?checked=' + beforeChecked);
                }else{//첨부파일 다운로드 시 backbutton 비활성화
                    e.preventDefault();
                }               
            }		    
		    else {
		        navigator.app.backHistory();
		    }
		}, false);
	}
	//	iOS의 경우 파일로딩 수행(Device Token 정보 로딩)
    if(deviceInfo != "Android" && $.mobile.activePage.is('#page_login')){
    	window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);	// file api
    }
};
// api load
function init() {
	document.addEventListener("deviceready", onDeviceReady, true);
}

//api-connection
function check_network() {
    var networkState = navigator.network.connection.type;

    var states = {};
    states[Connection.UNKNOWN]  = false;	//'Unknown connection';
    states[Connection.ETHERNET] = true;		//'Ethernet connection';
    states[Connection.WIFI]     = true;		//'WiFi connection';
    states[Connection.CELL_2G]  = true;		//'Cell 2G connection';
    states[Connection.CELL_3G]  = true;		//'Cell 3G connection';
    states[Connection.CELL_4G]  = true;		//'Cell 4G connection';
    states[Connection.NONE]     = false;	//'No network connection';
    
    return states[networkState];
}

function getDeviceInfo() {
	return deviceInfo.toLowerCase();
}

//조회
function getUserIDResult() {
	db.transaction(querySelectUserID, errorGetUserID);
}
function querySelectUserID(tx) {
	tx.executeSql('SELECT userID FROM MOSS_USERINFO', [], selectUserIDSuccess, errorGetUserID);
}
function selectUserIDSuccess(tx, results) {
	userID = results.rows.item(0).userID;
	console.log(commonDebugPrefix + "=============== DB userID =============== : " + userID);
}
function errorGetUserID(err) {
	console.log(commonDebugPrefix + "db error");
}

//	코드 테이블 데이터 로드 
function getMossCode(category) {
	$.ajax({
		url: url + "MossCode",
		data: {category : category},
		dataType: "json",
		type: "post",
		timeout: 10*1000,
		success: function (result) {
			var headerData = result.header;
			// header log
			console.log(commonDebugPrefix + "########### Header Data : MossCode["+category+"]  ###########");
			$.each(headerData, function(key, val){
				console.log(commonDebugPrefix + key + " : " + val);
			});

			if(headerData.result != 0) {
				showCommonAlert("MossCode", headerData.errMsg);
			} else {
				var bodyData = result.body;
				
				// CodeValue Ascending
				function sortCodeList(prop, asc) {
					bodyData = bodyData.sort(function(a, b) {
				        if (asc) return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);
				        else return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);
				    });
				}
				
				sortCodeList("DISPLAYORDER", true);
				
				console.log(commonDebugPrefix + "============ response MossCode ============");
				
				$.each(bodyData, function(key, val){
					$.each(val, function(key, val){
						console.log(loginDebugPrefix + key + " : " + val);
					});
					// 코드값 배열에 값 푸시
					moveStateCode.push(val.CODE);
					moveStateCodeVal.push(val.CODEVALUE);
				});
			}
		},
		error: function(jqXHR, textStatus, errorThrown) {
			$.mobile.hidePageLoadingMsg();
	        showCommonAlert("MossCode", textStatus);
	        console.log(commonDebugPrefix + jqXHR.responseText);
	        console.log(commonDebugPrefix + jqXHR.status);
	        console.log(commonDebugPrefix + errorThrown);
	    }
	});
}

$(document).ready(function() {
	// 로그인이 완료되면 로컬DB 에서 사번을 읽어온다.
	if (!db) {
		db = window.openDatabase("Database", "1.0", "myDb", 200000);
	}
	getUserIDResult();
	// 네트워크 상태 체크 
	setInterval(function (){
		if(!true == check_network()) {
			$.mobile.hidePageLoadingMsg();
//			showCommonAlert("로그인", "네트워크 연결이 불안정합니다\n잠시후에 다시 시도 해주세요.");
			console.log(commonDebugPrefix + "=============== 네트워크 연결 상태 : NOK ===============");
		} else {
			console.log(commonDebugPrefix + "=============== 네트워크 연결 상태 : OK ===============");
		}
	},60 * 1000);
	
	// 코드 테이블의 내용으로 상황보고 라디오 버튼 구성
	getMossCode("MOVESTATE");
});

$(document).on('blur', 'input, textarea', function() {
//	iOS의 경우 OS 브라우저의 특성상 header 고정이 되지않아 키보드가 나타난뒤 헤더 위치 설정 처리
	if(deviceInfo != "Android") {
	    $.mobile.silentScroll($('div[data-role="header"]').offset().top);
	}
});

////	모든 페이지의 매뉴패널이 열릴 때 이벤트 발생
//$(document).on("pageshow", "div[data-role='page']" , function(event) {
////	 alert($.mobile.activePage.attr('id'));
////	//	OS별 이벤트 분기
//	$("#menuPanel").panel({
//		open : function(event, ui) {
//			if(deviceInfo == "Android") {
//				$("#panel_btn_ktConsole").click(function() {
//					callIntent('ktConsole');
//				});
//			}else {
//				$("#panel_img_ktConsole").attr("src", "../img/menu_remote_d.png");
//				$("#panel_ktConsole").click(function() {
//					showiOSAlert();
//				});
//			}
//		}
//	});
//});

$(document).on("pagechange", function(event) {
	//	페이지 이동 시 폴링 인터벌 해제
	if(!$.mobile.activePage.is('#page_alarmList_detail')) {
		clearInterval(interval_detail); // stop the interval
		console.log(commonDebugPrefix + "========= Polling Number => " + interval_detail + "=========");
	}
	//	현재위치 전송 팝업 호출을 위한 flag 설정
	if(	!$.mobile.activePage.is('#page_alarmList_noti') && 
		!$.mobile.activePage.is('#page_alarmList_detail') &&
		!$.mobile.activePage.is('#page_alarmList_detail_capture') &&
		!$.mobile.activePage.is('#page_alarmList_detail_map') &&
		!$.mobile.activePage.is('#page_alarmList_success') && 
		!$.mobile.activePage.is('#page_alarmList_detail_success') && 
		!$.mobile.activePage.is('#page_alarmList_TFMS') &&
		!$.mobile.activePage.is('#page_alarmList_detail_TFMS')) {
		setLocPopupFlag = true;
	}
});